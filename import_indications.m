function ind = import_indications(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   INDICATIONS1005121214A = IMPORTFILE(FILENAME) Reads data from text file
%   FILENAME for the default selection.
%
%   INDICATIONS1005121214A = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads
%   data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   Indications1005121214a = importfile('Indications1005 12-12-14a.csv', 2, 33);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/09/17 15:24:28

%% Initialize variables.
delimiter = ',';
if nargin<=2
startRow = 2;
endRow = inf;
end

%% Format string for each line of text:
%   column1: datetimes (%{MM/dd/yyyy}D)
%	column2: text (%s)
%   column5: text (%s)
%	column6: double (%f)
%   column7: text (%s)
%	column8: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%{MM/dd/yyyy}D%s%*s%*s%s%f%s%f%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
frewind(fileID);
dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
for col=1:length(dataArray)
dataArray{col} = [dataArray{col};dataArrayBlock{col}];
end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
ind = table(dataArray{1:end-1}, 'VariableNames', {'DateMdyyyy','TimeHHmmss000','LowHRConfidence','HRConfidence','LowBRConfidence','BRConfidence'});

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% Indications1005121214a.DateMdyyyy=datenum(Indications1005121214a.DateMdyyyy);

